{% import 'hounddd.reviews::rating' as reviewMacros %}

{% if reviews | length > 0 %}
    {% set uuid = 'reviewsSlider'~ __SELF__.id %}

    <div x-data="{{ uuid }}" class="review--slider relative mx-auto overflow-hidden p-2 sm:p-4 not-prose">

        {% if __SELF__.showCounter %}
        <!-- Slider counter -->
        <div class="absolute right-5 top-5 z-10 rounded-full bg-gray-600 px-2 text-center text-sm text-white">
            <span x-text="currentIndex"></span>/<span>{{ reviews | length }}</span>
        </div>
        {% endif %}

        {% if __SELF__.showControls %}
        <!-- Slider controls -->
        <button @click="previous()" class="absolute left-5 top-1/2 z-10 flex h-11 w-11 -translate-y-1/2 items-center justify-center rounded-full bg-gray-100 shadow-md hover:text-white hover:bg-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="2.5" stroke="currentColor" class="w-6 h-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="M15.75 19.5L8.25 12l7.5-7.5" />
            </svg>
        </button>
        <button @click="forward()" class="absolute right-5 top-1/2 z-10 flex h-11 w-11 -translate-y-1/2 items-center justify-center rounded-full bg-gray-100 shadow-md hover:text-white hover:bg-gray-600">
            <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="1.5" stroke="currentColor" class="w-6 h-6">
              <path stroke-linecap="round" stroke-linejoin="round" d="M8.25 4.5l7.5 7.5-7.5 7.5" />
            </svg>
        </button>
        {% endif %}

        <div class="relative h-80 w-[calc(100%_-_6rem)] mx-auto{{ __SELF__.showDots ? ' mb-4'}}">
            {% for review in reviews %}
                <figure class="review absolute top-0 text-center px-6" x-show="currentIndex == {{ loop.index }}" x-transition:enter="transition transform duration-300" x-transition:enter-start="opacity-0" x-transition:enter-end="opacity-100" x-transition:leave="transition transform duration-300" x-transition:leave-start="opacity-100" x-transition:leave-end="opacity-0">
                    {% if review.avatar %}
                        <div class="w-24 h-24 rounded-full border-4 border-gray-400 overflow-hidden mx-auto" x-show="currentIndex == {{ loop.index }}" x-transition:enter="transition transform duration-300" x-transition:enter-start="translate-y-6" x-transition:enter-end="translate-y-0" x-transition:leave="transition transform duration-300" x-transition:leave-start="translate-y-0" x-transition:leave-end="-translate-y-12" >
                            <img src="{{ review.avatar | resize(120, auto, {'extension':'webp'}) }}" alt="{{ review.avatar.title }}" class="w-full h-full object-cover" />
                        </div>
                    {% endif %}
                    <p class="review--name mb-4">{{ review.name }}</p>
                    <p class="review--title text-xl font-semibold">{{ review.title }}</p>
                    <div class="rating">{{ reviewMacros.rating(__SELF__.ratingDisplay, review.rating) }}</div>
                    <div>{{ html_limit(review.content | nl2br, 300) }}</div>
                </figure>
            {% endfor %}
        </div>

        {% if __SELF__.showDots %}
        <!-- Slider indicators -->
        <div class="absolute flex bottom-0 left-1/2 z-30 space-x-3 -translate-x-1/2">
            {% for review in reviews %}
                <button type="button" class="w-3 h-3 rounded-full hover:bg-gray-400" @click="slideTo({{ loop.index }})" :class="currentIndex == {{ loop.index }} ? 'bg-gray-600' : 'bg-gray-300'" aria-current="{{ loop.index == 1 ? 'true':'false' }}" aria-label="Review {{ loop.index }}" ></button>
            {% endfor %}
        </div>
        {% endif %}

    </div>

    <script>
        document.addEventListener("alpine:init", () => {
            Alpine.data("{{ uuid }}", () => ({
                {% if __SELF__.autoPlay > 0 %}
                init() {
                    setInterval(() => {
                        this.forward();
                    }, {{ __SELF__.autoPlay * 1000 }});
                },
                {% endif %}
                currentIndex: 1,
                previous() {
                    if (this.currentIndex > 1) {
                        this.currentIndex = this.currentIndex - 1;
                    } else {
                        this.currentIndex = {{ reviews | length }};
                    }
                },
                forward() {
                    if (this.currentIndex < {{ reviews | length }}) {
                        this.currentIndex = this.currentIndex + 1;
                    } else {
                        this.currentIndex = 1;
                    }
                },
                slideTo(x) {
                    this.currentIndex = x;
                },
            }));

            // console.log(Alpine.data.{{ uuid }});
            // console.log(Alpine);
                // setInterval(forward, {{ __SELF__.autoPlay * 1000 }});
        });
    </script>

{% else %}
    <p>{{ __SELF__.noReviewsMessage }}</p>
{% endif %}
